/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thegrocery.thegroceryfrugal.GUI;

import com.thegrocery.thegroceryfrugal.HibernateUtil;
import com.thegrocery.thegroceryfrugal.Models.Ingredients;
import com.thegrocery.thegroceryfrugal.Models.Measurement;
import com.thegrocery.thegroceryfrugal.Models.Recipe;
import com.thegrocery.thegroceryfrugal.Models.RecipeIngredients;
import com.thegrocery.thegroceryfrugal.Models.Users;
import com.thegrocery.thegroceryfrugal.Utility.IngredientUtility;
import com.thegrocery.thegroceryfrugal.Utility.MeasurementUtility;
import com.thegrocery.thegroceryfrugal.Utility.RecipeIngredientUtility;
import com.thegrocery.thegroceryfrugal.Utility.RecipeUtility;
import com.thegrocery.thegroceryfrugal.Utility.UserUtility;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Mila
 */
public class ModifyRecipe extends javax.swing.JFrame {

    /**
     * Creates new form ModifyGroceryList
     * @param recipe
     * @param user
     */
    public ModifyRecipe(Recipe recipe, Users user) {
        this.recipe = recipe;
        this.user = user;
        initComponents();
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction tx = session.beginTransaction();
        jTextArea1.setText(recipe.toString(tx, session));
        String text = "In the text field below, type the ingredient you would like to edit.\n"
                + "If the ingredient is not currently in the recipe, type in the quantity and measurement type,\n"
                + "and select add ingredient.\n";
        JOptionPane.showMessageDialog(null, text, "Instructions", JOptionPane.PLAIN_MESSAGE);
        tx.commit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        newIngredientBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        deleteBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        updateBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setText("Search For Existing Ingredient:");

        searchField.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        searchBtn.setBackground(new java.awt.Color(186, 207, 242));
        searchBtn.setText("Search");
        searchBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        newIngredientBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        newIngredientBtn.setBackground(new java.awt.Color(186, 207, 242));
        newIngredientBtn.setText("Add New Ingredient");
        newIngredientBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newIngredientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newIngredientBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Current Recipe:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);
        // JACOB MODIFIED CODE
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setLineWrap(true);
        
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        deleteBtn.setBackground(new java.awt.Color(186, 207, 242));
        deleteBtn.setText("Delete Ingredient From List");
        deleteBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel6.setText("Or");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setText("New Quantity:");

        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel4.setText("Amount Type:");
        jLabel4.setToolTipText("");
        
        // CUSTOM CODE BY SHIMER FOR HANDLING QUANTITY TYPES
        List<Measurement> measurements = MeasurementUtility.listAllMeasurements();
        types = new String[measurements.size()];
        for (int i = 0; i < measurements.size(); i++) {
            types[i] = measurements.get(i).getName();
            
        }
        // END CUSTOM CODE

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(types));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        updateBtn.setBackground(new java.awt.Color(186, 207, 242));
        updateBtn.setText("Update Current Ingredients");
        updateBtn.setToolTipText("");
        updateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel5.setText("Or");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(270, 270, 270))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addGap(18, 18, 18)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newIngredientBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(updateBtn)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(searchBtn)
                    .addComponent(newIngredientBtn)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn))
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // User enters ingredient name here to search existing ingredients
    }                                           

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // search button for existing ingredients
        //Ingredients ingredient = IngredientUtility.findIngredientsByName(searchField.getText());
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction tx = session.beginTransaction();
        
        Recipe recipe = (Recipe) session.createQuery("SELECT R FROM Recipe R JOIN FETCH R.recipeIngredientses RI WHERE RI.recipe = " + this.recipe.getId()).uniqueResult();
        Set<RecipeIngredients> recipeIngredients = recipe.getRecipeIngredientses();
        boolean inRecipe = false;
        for (Iterator iter = recipeIngredients.iterator(); iter.hasNext();){
            RecipeIngredients RI = (RecipeIngredients)iter.next();
            if (RI.getIngredients().getName() == null ? searchField.getText() == null : RI.getIngredients().getName().equals(searchField.getText())){
                inRecipe = true;
                quantityField.setText(RI.getQuantity().toString());
                jComboBox1.setSelectedItem(RI.getMeasurement().getName());
            }
        }
        
        tx.commit();
        if (inRecipe == false){
            JOptionPane.showMessageDialog(null, 
                    "This recipe " + recipe.getName() + " does not have the ingredient " + searchField.getText() + ".", 
                    "Could not find Ingredient in recipe", 
                    JOptionPane.PLAIN_MESSAGE);
        }
        
    }                                         

    private void newIngredientBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // user clicks button, this wil open NewIngredient.java
        List<Ingredients> ingredients = IngredientUtility.findIngredientsByName(searchField.getText());
        Ingredients selected_ingredient = null;

        ButtonGroup radioGroup = new javax.swing.ButtonGroup();
        final JPanel panel = new JPanel();
        for (Iterator iter = ingredients.iterator(); iter.hasNext();) {
            Ingredients ingredient = (Ingredients)iter.next();
            javax.swing.JRadioButton radio_button = new javax.swing.JRadioButton(ingredient.getName());
            radio_button.setActionCommand(ingredient.getName());
            radioGroup.add(radio_button);
            panel.add(radio_button);
        }
        JOptionPane.showMessageDialog(null, panel);
        if (radioGroup.getSelection().getActionCommand() != null) {
            for (Iterator iter = ingredients.iterator(); iter.hasNext();){
                Ingredients ingredient = (Ingredients)iter.next();
                if (ingredient.getName().equals(radioGroup.getSelection().getActionCommand())){
                    selected_ingredient = ingredient;
                }
            }

            RecipeIngredientUtility.associateIngredientToRecipe(recipe, 
                    selected_ingredient, 
                    MeasurementUtility.findMeasurement(types[jComboBox1.getSelectedIndex()]), 
                    Float.valueOf(quantityField.getText()));
            Session session = HibernateUtil.getSessionFactory().getCurrentSession();
            Transaction tx = session.beginTransaction();
            jTextArea1.setText(recipe.toString(tx, session));
            tx.commit();
            
        } else {
            JOptionPane.showMessageDialog(null, "You didn't select an ingredient!", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            
        
    }                                                

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) { 
        // lets user delete ingredient
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction tx = session.beginTransaction();
        Recipe recipe = (Recipe) session.createQuery("SELECT R FROM Recipe R JOIN FETCH R.recipeIngredientses RI WHERE RI.recipe = " + this.recipe.getId()).uniqueResult();
        tx.commit();
        Set<RecipeIngredients> recipeIngredients = recipe.getRecipeIngredientses();
        for (Iterator iter = recipeIngredients.iterator(); iter.hasNext();){
            RecipeIngredients recipeIngredient = (RecipeIngredients)iter.next();
            if (recipeIngredient.getIngredients().getName().equals(searchField.getText())){
                RecipeIngredientUtility.deleteAssociation(recipeIngredient);
                System.out.println("THIS WORKED");
            } else {
                System.out.println("THIS DIDN'T WORKED");
            }
        }
        
        
    }                                         

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // determines what amount the ingredient is measured in
    }                                          

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // updates the recipe
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction tx = session.beginTransaction();
        Recipe recipe = (Recipe) session.createQuery("SELECT R FROM Recipe R JOIN FETCH R.recipeIngredientses RI WHERE RI.recipe = " + this.recipe.getId()).uniqueResult();
        Set<RecipeIngredients> recipeIngredients = recipe.getRecipeIngredientses();
        
        for (Iterator iter = recipeIngredients.iterator(); iter.hasNext();){
            RecipeIngredients RI = (RecipeIngredients)iter.next();
            if (RI.getIngredients().getName() == null ? searchField.getText() == null : RI.getIngredients().getName().equals(searchField.getText())){
                RI.setQuantity(Float.valueOf(quantityField.getText()));
                RI.setMeasurement(MeasurementUtility.findMeasurement(types[jComboBox1.getSelectedIndex()]));
            }
        }
    }                                         

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // user types name of desired ingredient to delete here
    }                                           

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // user enters quantity of ingredient here
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyRecipe(RecipeUtility.getRecipe("Banana Boats"), UserUtility.getUser("system-user")).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton newIngredientBtn;
    private javax.swing.JTextField quantityField;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton updateBtn;
    private Recipe recipe;
    private Users user;
    private String[] types;
    // End of variables declaration                   
}
