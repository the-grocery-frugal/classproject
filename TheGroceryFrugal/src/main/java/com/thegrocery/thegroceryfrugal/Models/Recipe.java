package com.thegrocery.thegroceryfrugal.Models;
// Generated Jun 4, 2019 6:31:11 AM by Hibernate Tools 4.3.1

import com.thegrocery.thegroceryfrugal.HibernateUtil;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 * Recipe generated by hbm2java
 */

@Entity
@Table(name = "recipe")
public class Recipe  implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable=false)
    private int id;
    
    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "category_id")
    private Categories categories;
    
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "nutrition_id", referencedColumnName = "id")
    private Nutrition nutrition;
    
    @Column(name = "description")
    private String description;
    
    @Column(name = "name")
    private String name;
    
    @Column(name = "steps")
    private String steps;
    
    @OneToMany(mappedBy = "recipe")
    private Set<RecipeIngredients> recipeIngredientses = new HashSet(0);
    
    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "user_id")
    private Users user;

    public Recipe() {
        
    }
    
    public Recipe(String name, Users user) {
        this.name = name;
        this.user = user;
    }
    
    public Recipe(String name, String description, Users user) {
        this.name = name;
        this.description = description;
        this.user = user;
    }
    
    public Recipe(String name, String description, String steps, Users user){
        this.name = name;
        this.description = description;
        this.steps = steps;
        this.user = user;
    }
    
    public Recipe(String name, Categories category, String description, String steps, Users user) {
        this.name = name;
        this.categories = category;
        this.description = description;
        this.steps = steps;
        this.user = user;
    }
    
    
    public Recipe(Categories categories, Nutrition nutrition, String description, String name, String steps, Set recipeIngredientses) {
       this.categories = categories;
       this.nutrition = nutrition;
       this.description = description;
       this.name = name;
       this.steps = steps;
       this.recipeIngredientses = recipeIngredientses;
    }
   
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    public Categories getCategories() {
        return this.categories;
    }
    
    public void setCategories(Categories categories) {
        this.categories = categories;
    }
    public Nutrition getNutrition() {
        return this.nutrition;
    }
    
    public void setNutrition(Nutrition nutrition) {
        this.nutrition = nutrition;
    }
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public String getSteps() {
        return this.steps;
    }
    
    public void setSteps(String steps) {
        this.steps = steps;
    }

    public Users getUser() {
        return user;
    }

    public void setUser(Users user) {
        this.user = user;
    }
    
    public Set getRecipeIngredientses() {
        return this.recipeIngredientses;
    }
    
    public void setRecipeIngredientses(Set recipeIngredientses) {
        this.recipeIngredientses = recipeIngredientses;
    }
    
    public void addRecipeIngredients(RecipeIngredients recipeIngredients) {
        recipeIngredientses.add(recipeIngredients);
        recipeIngredients.setRecipe(this);
    }
    
    public void removeRecipeIngredients(RecipeIngredients recipeIngredients) {
        recipeIngredientses.remove(recipeIngredients);
        recipeIngredients.setRecipe(null);
    }
    
    public String toString(Transaction tx, Session session){
        String string = "";
        
        string = this.getName() + "\n";
        string += "Creator: " + this.getUser().getUsername() + "\n\n";
        
        try{
            Recipe recipe = (Recipe) session.createQuery("SELECT R FROM Recipe R JOIN FETCH R.recipeIngredientses RI WHERE RI.recipe = " + this.getId()).uniqueResult();
            Set<RecipeIngredients> recipeIngredients = recipe.getRecipeIngredientses();
            string += "Ingredients: \n";
            string += "Ingredient\tQuantity\tUnit\tDescription\n";
            for (Iterator iter = recipeIngredients.iterator(); iter.hasNext();){
                RecipeIngredients RI = (RecipeIngredients)iter.next();
                if (RI.getDescription() == null || RI.getDescription() == "null"){
                    string += RI.getIngredients().getName() + "\t" + RI.getMeasurement().getName() + "\t" + RI.getQuantity() + "\n";
                } else {
                    string += RI.getIngredients().getName() + "\t" + RI.getMeasurement().getName() + "\t" + RI.getQuantity() + "\t" + RI.getDescription() + "\n";
                }
                
            }
        } catch (NullPointerException ex){
            string += "No Ingredients found for this recipe\n"; 
        }
            
        string += "\nSteps: \n";
        if (this.getSteps() == null || this.getSteps() == "null"){
            string += "No steps found for this recipe\n";
        } else {
            string += this.getSteps();
        }
        
        string += "\n-----------------------------------------------------------\n";
        return string;
    }
    @Override
    public String toString() {
    	return name;
    }

}
