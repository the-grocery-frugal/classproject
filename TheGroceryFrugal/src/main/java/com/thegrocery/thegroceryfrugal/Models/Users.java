/**
 * File: Users.java
 * Author: hbm2java
 * Date: 6/4/2019
 */
package com.thegrocery.thegroceryfrugal.Models;
// Generated Jun 4, 2019 6:31:11 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Represents User entity.
 * <p>
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"id"})})
public class Users implements java.io.Serializable {

    /**
     * An auto-generated user ID.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, unique = true)
    private long id;

    /**
     * The username.
     */
    @Column(name = "username", length = 20, nullable = false, unique = true)
    private String username;

    /**
     * The user password.
     */
    @Column(name = "password", length = 80, nullable = false)
    private String password;

    /**
     * A set of user recipes.
     */
    @OneToMany(mappedBy = "user")
    private Set<Recipe> recipes = new HashSet(0);

    /**
     * Constructs default Users object.
     */
    public Users() {
    }

    /**
     * Constructs an User object with the specified properties.
     *
     * @param id       the user id
     * @param username the username
     * @param password the user password
     */
    public Users(long id, String username, String password) {
        this.id = id;
        this.username = username;
        this.password = password;
    }

    /**
     * Constructs an User object with the specified properties.
     *
     * @param username the username
     * @param password the user password
     */
    public Users(String username, String password) {
        this.username = username;
        this.password = password;
    }

    /**
     * Returns user ID.
     *
     * @return the user ID
     */
    public long getId() {
        return this.id;
    }

    /**
     * Sets a new user ID.
     *
     * @param id the user ID
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Returns the username.
     *
     * @return the username
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Sets a new username
     *
     * @param username the username
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Returns the user password.
     *
     * @return the user password
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Sets the user password.
     *
     * @param password the user password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Returns a string representation of the User object in form "username
     * password".
     *
     * @return a string representation of the object
     */
    @Override
    public String toString() {
        return this.username + " " + this.password;
    }
    
    @Override
    public boolean equals(Object obj) {
    	if (!(obj instanceof Users)) {
    		return false;
    	}
    	return id == ((Users)obj).id;
    }
}